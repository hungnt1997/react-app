{"version":3,"sources":["app.js","index.js"],"names":["App","state","data","characters","name","job","handleSubmit","character","setState","removeCharactor","index","filter","i","fetch","then","result","json","this","fetchData","map","entry","key","charactersData","React","Component","Table","props","removeCharacter","TableBody","rows","row","onClick","Form","initialState","handleChange","event","target","value","submitForm","htmlFor","type","id","onChange","TableHeader","Square","className","Board","squares","renderSquare","calculateWinner","lines","length","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f63066e7.chunk.js","sourcesContent":["\r\nimport React, { Component } from 'react';\r\nclass App extends React.Component {\r\n    state = {\r\n        data: [],\r\n        characters: [\r\n            {\r\n                name: 'Charlie',\r\n                job: 'Janitor',\r\n            },\r\n            {\r\n                name: 'Mac',\r\n                job: 'Bouncer',\r\n            },\r\n            {\r\n                name: 'Dee',\r\n                job: 'Aspring actress',\r\n            },\r\n            {\r\n                name: 'Dennis',\r\n                job: 'Bartender',\r\n            },\r\n        ]\r\n        ,\r\n    }\r\n    fetchData(){\r\n        const url =  'https://en.wikipedia.org/w/api.php?action=opensearch&search=Seona+Dancing&format=json&origin=*'\r\n        fetch(url).then(\r\n            (result) => result.json()\r\n        ).then((result) => {\r\n            this.setState({\r\n                data : result,\r\n            })\r\n        })\r\n    }\r\n    componentDidMount(){\r\n        this.fetchData()\r\n    }\r\n\r\n    handleSubmit = (character) => {\r\n        this.setState({characters: [...this.state.characters, character]})\r\n      }\r\n    render() {\r\n\r\n        const {data} = this.state\r\n        const result = data.map((entry, index) => { \r\n            return <li key={index}>{entry}</li>\r\n        })\r\n\r\n        return (\r\n            // <ul> {result}</ul>\r\n            <div>\r\n                \r\n            <Table\r\n                charactersData={this.state.characters}\r\n                removeCharactor={this.removeCharactor}\r\n            />\r\n            <Form   handleSubmit={this.handleSubmit}/> \r\n            </div>\r\n         \r\n        )\r\n    }\r\n    removeCharactor = (index) => {\r\n        const { characters } = this.state\r\n        this.setState({\r\n            characters: characters.filter((character, i) => {\r\n                return i !== index\r\n            })\r\n        })\r\n    }\r\n}\r\nclass Table extends Component {\r\n    render() {\r\n        const charactersData = this.props.charactersData\r\n        const removeCharacter = this.props.removeCharactor\r\n        return (\r\n            <table>\r\n                <TableHeader />\r\n                <TableBody\r\n                    charactersData={charactersData}\r\n                    removeCharactor={removeCharacter}\r\n                />\r\n            </table>)\r\n\r\n    }\r\n}\r\nconst TableBody = (props) => {\r\n    const { charactersData, removeCharactor } = props\r\n    const rows = charactersData.map((row, index) => {\r\n        return (\r\n            <tr key={index}>\r\n                <td>{row.name}</td>\r\n                <td>{row.job}</td>\r\n                <td>\r\n                    <button onClick={() => removeCharactor(index)}>Delete</button>\r\n                </td>\r\n            </tr>\r\n        )\r\n    })\r\n    return <tbody>{rows}</tbody>\r\n}\r\nclass Form extends Component {\r\n    initialState = {\r\n        name: '',\r\n        job: '',\r\n      }\r\n    state = {\r\n        name: '',\r\n        job: '',\r\n    }\r\n    handleChange = (event) => {\r\n        const { name, value } = event.target\r\n        this.setState({\r\n            [name]: value,\r\n        })\r\n    }\r\n    render() {\r\n        const { name, job } = this.state;\r\n        return (\r\n            <form>\r\n                <label htmlFor=\"name\">\r\n                    Name\r\n                 </label>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    id=\"name\"\r\n                    value={name}\r\n                    onChange={this.handleChange}\r\n                />\r\n                <label htmlFor=\"job\">Job</label>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"job\"\r\n                    id=\"job\"\r\n                    value={job}\r\n                    onChange={this.handleChange} />\r\n                <button type='button' onClick={this.submitForm}>submit</button> \r\n            </form>\r\n\r\n        )\r\n    }\r\n    submitForm = () => {\r\n        this.props.handleSubmit(this.state)\r\n        this.setState(this.initialState)\r\n    }\r\n}\r\n\r\nconst TableHeader = () => {\r\n    return (\r\n        <thead>\r\n            <tr>\r\n                <th>Name</th>\r\n                <th>Job</th>\r\n            </tr>\r\n        </thead>\r\n    )\r\n}\r\n\r\n\r\nexport default App","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './app.js';\r\nclass Square extends React.Component {\r\n    render() {\r\n      return (\r\n        <button \r\n        className=\"square\" \r\n        onClick={ () => {this.props.onClick()}}\r\n        >\r\n            {this.props.value}\r\n        </button>\r\n      );\r\n    }\r\n  }\r\n  \r\n  class Board extends React.Component {\r\n    renderSquare(i) {\r\n      return <Square \r\n      value={this.props.squares[i]}\r\n      onClick={() => this.props.onClick(i)} \r\n      />;\r\n    }\r\n\r\n  \r\n    render() {\r\n      \r\n      return (\r\n        <div>\r\n          <div className=\"board-row\">\r\n            {this.renderSquare(0)}\r\n            {this.renderSquare(1)}\r\n            {this.renderSquare(2)}\r\n          </div>\r\n          <div className=\"board-row\">\r\n            {this.renderSquare(3)}\r\n            {this.renderSquare(4)}\r\n            {this.renderSquare(5)}\r\n          </div>\r\n          <div className=\"board-row\">\r\n            {this.renderSquare(6)}\r\n            {this.renderSquare(7)}\r\n            {this.renderSquare(8)}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  class Game extends React.Component {\r\n    constructor(props){\r\n      super(props);\r\n      this.state = { \r\n        history : [{\r\n          squares:  Array(9).fill(null)\r\n        }\r\n        ],\r\n        xIsNext: true, \r\n        stepNumber: 0, \r\n      }\r\n    }\r\n    handleClick(i){\r\n      const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n      const current = history[history.length - 1];\r\n      const squares = current.squares.slice();\r\n      if (calculateWinner(squares) || squares[i]) {\r\n        return;\r\n      }\r\n      squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n      this.setState({\r\n        history: history.concat([{\r\n          squares: squares,\r\n        }]),\r\n        xIsNext: !this.state.xIsNext,\r\n        stepNumber: history.length, \r\n      });\r\n    }\r\n    jumpTo(step){\r\n      this.setState({\r\n        stepNumber: step, \r\n        xIsNext: (step % 2) === 0 , \r\n      })\r\n    }\r\n    render() {\r\n      const history = this.state.history;\r\n      const current = history[this.state.stepNumber];\r\n      const winner = calculateWinner(current.squares)\r\n      const move  = history.map((step, move ) => { \r\n        const desc = move ?  \"Go to move #\" + move: \r\n        \"Go to game start\"; \r\n\r\n        return (\r\n          <li key={move}>\r\n            <button onClick={()=> this.jumpTo(move)}>{desc}</button>\r\n          </li>\r\n        );\r\n      });\r\n    \r\n      let status;\r\n      if ( winner ){\r\n          status = 'Winner: ' + winner\r\n      }\r\n      else{\r\n          status = 'Next play: ' + (this.state.xIsNext ? 'X' : 'O');\r\n      }\r\n      return (\r\n        <div className=\"game\">\r\n          <div className=\"game-board\">\r\n            <Board \r\n                squares = {current.squares}\r\n                onClick = {(i) => this.handleClick(i)}\r\n            />\r\n          </div>\r\n          <div className=\"game-info\">\r\n            <div>{ status }</div>\r\n            <ol>{move}</ol>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  // ========================================\r\n  \r\n  ReactDOM.render(\r\n    <App />,\r\n    document.getElementById('root')\r\n  );\r\n\r\n  function calculateWinner(squares) {\r\n    const lines = [\r\n      [0, 1, 2],\r\n      [3, 4, 5],\r\n      [6, 7, 8],\r\n      [0, 3, 6],\r\n      [1, 4, 7],\r\n      [2, 5, 8],\r\n      [0, 4, 8],\r\n      [2, 4, 6],\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n      const [a, b, c] = lines[i];\r\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n        return squares[a];\r\n      }\r\n    }\r\n    return null;\r\n  }"],"sourceRoot":""}